// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	fs "io/fs"

	mock "github.com/stretchr/testify/mock"
)

// DirectoryContentFormatter is an autogenerated mock type for the DirectoryContentFormatter type
type DirectoryContentFormatter struct {
	mock.Mock
}

// File provides a mock function with given fields: path, info
func (_m *DirectoryContentFormatter) File(path string, info fs.FileInfo) (string, error) {
	ret := _m.Called(path, info)

	if len(ret) == 0 {
		panic("no return value specified for File")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string, fs.FileInfo) (string, error)); ok {
		return rf(path, info)
	}
	if rf, ok := ret.Get(0).(func(string, fs.FileInfo) string); ok {
		r0 = rf(path, info)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string, fs.FileInfo) error); ok {
		r1 = rf(path, info)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RootPath provides a mock function with given fields: path
func (_m *DirectoryContentFormatter) RootPath(path string) {
	_m.Called(path)
}

// Title provides a mock function with given fields: title
func (_m *DirectoryContentFormatter) Title(title string) string {
	ret := _m.Called(title)

	if len(ret) == 0 {
		panic("no return value specified for Title")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(title)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewDirectoryContentFormatter creates a new instance of DirectoryContentFormatter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDirectoryContentFormatter(t interface {
	mock.TestingT
	Cleanup(func())
}) *DirectoryContentFormatter {
	mock := &DirectoryContentFormatter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
